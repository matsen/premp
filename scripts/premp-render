#!/usr/bin/env python

from mako.lookup import TemplateLookup
from mako.template import Template
from mako.runtime import Context
import mako.exceptions
import glob
import sys
import argparse
import os
import re
import shutil

templates_dir= "/home/matsen/re/premp/templates"

def write_rendered(templ_name, proj_name, out_name):
    print("Rendering your "+templ_name+" for '"+proj_name+"'...")
    lookup = TemplateLookup(directories=[templates_dir])
    templ = lookup.get_template("{0}.mako".format(templ_name))
    with open(out_name, 'w') as outfile:
        outfile.write(templ.render(proj=proj_name))

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("template_name")
    parser.add_argument("project_name")
    args = parser.parse_args()

    templ_name = args.template_name
    proj_name = args.project_name

    (root, ext) = os.path.splitext(templ_name)
    if ext in ["", ".Latex", ".Pantex", ".Pandocx"]: # these get rendered
        write_rendered(templ_name, proj_name, root)
    elif ext in [".tex", ".bib", ".md"]: # these just get copied
        shutil.copy(os.path.join(templates_dir, templ_name), proj_name+ext)
    else:
        raise ValueError("`%s` is not a known extension." % ext)



if __name__ == "__main__":
    main()
